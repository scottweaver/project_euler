class Euler2

 def to_s
   <<-END_PROBLEM.strip
      Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

      Find the sum of all the even-valued terms in the sequence which do not exceed four million.
     END_PROBLEM
 end

 def solve(ceiling)
   sum = 0
   fib(1,1) { |n| sum = sum + (n % 2 == 0 && n <= ceiling ? n : 0); n <= ceiling }
   sum
 end

 def fib(n1, n2, &block)
    if(yield(n2)) then fib(n2, n1+n2, &block) end
 end
end
